///
/// fibo.sym
///

//

sys.reset();

:: f := /.(var n) => var -> if(n < 2, n, f(n-1) + f(n-2));

:: r := [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];

:: x := [ f(0), f(1), f(2), f(3), f(4), f(5), f(6), f(7), f(8) , f(9) ];

:: y := fmap(f, [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]);

verify f(0) = r[0]
verify f(1) = r[1]
verify f(2) = r[2]
verify f(3) = r[3]
verify f(4) = r[4]
verify f(5) = r[5]
verify f(6) = r[6]
verify f(7) = r[7]
verify f(8) = r[8]

verify x[0] = r[0]
verify x[1] = r[1]
verify x[2] = r[2]
verify x[3] = r[3]
verify x[4] = r[4]
verify x[5] = r[5]
verify x[6] = r[6]
verify x[7] = r[7]
verify x[8] = r[8]

verify x = r
verify x = y

//

sys.reset();

:: f := /.(int n) => int -> if(n < 2, n, f(n-1) + f(n-2));

:: r := [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];

:: x := [ f(0), f(1), f(2), f(3), f(4), f(5), f(6), f(7), f(8) , f(9) ];

:: y := fmap(f, [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]);

verify f(0) = r[0]
verify f(1) = r[1]
verify f(2) = r[2]
verify f(3) = r[3]
verify f(4) = r[4]
verify f(5) = r[5]
verify f(6) = r[6]
verify f(7) = r[7]
verify f(8) = r[8]

verify x[0] = r[0]
verify x[1] = r[1]
verify x[2] = r[2]
verify x[3] = r[3]
verify x[4] = r[4]
verify x[5] = r[5]
verify x[6] = r[6]
verify x[7] = r[7]
verify x[8] = r[8]

verify x = r
verify x = y

//

sys.reset();

verify true
